<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IotWebApi</name>
    </assembly>
    <members>
        <member name="T:IotWebApi.Controllers.DevicesController">
            <summary>
            Class that manage the request about device to the DB
            </summary>
        </member>
        <member name="M:IotWebApi.Controllers.DevicesController.#ctor(IotWebApi.Models.DbSensorsContext)">
            <summary>
            Creates a new instance of  <see ref="DevicesController"/>.
            </summary>
            <param name="context">Context of the DB</param>
        </member>
        <member name="M:IotWebApi.Controllers.DevicesController.GetDevices">
            <summary>
            Gets all devices.
            </summary>
            <returns>List of devices.</returns>
        </member>
        <member name="M:IotWebApi.Controllers.DevicesController.GetDevice(System.Int32)">
            <summary>
            Gets a device by its Id.
            </summary>
            <param name="id">Device's Id.</param>
            <returns>Device corresponding to the id</returns>
        </member>
        <member name="M:IotWebApi.Controllers.DevicesController.GetDeviceByName(System.String)">
            <summary>
            Gets a device by name.
            </summary>
            <param name="name">Name of the requested device.</param>
            <returns>Device corresponding to the name.</returns>
        </member>
        <member name="T:IotWebApi.Controllers.MeasuresController">
            <summary>
            Class that manage requests about measure to the DB
            </summary>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.#ctor(IotWebApi.Models.DbSensorsContext)">
            <summary>
            Creates a new instance of <see cref="T:IotWebApi.Controllers.MeasuresController"/>.
            </summary>
            <param name="context">Context of the DB.</param>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetMeasures(System.Int32,System.Int32)">
            <summary>
            Returns the measures list.
            </summary>
            <returns>List of stored measures</returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetMeasure(System.Int32)">
            <summary>
            Gets a measure by its id.
            </summary>
            <param name="id">Id of a measure.</param>
            <returns>Measure with the corresponding id.</returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetMeasureBySensorId(System.Int32)">
            <summary>
            GET: api/Measure/sensor/5
            </summary>
            <param name="sensorId"></param>
            <returns></returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetSensorsBySensorIdAndDate(System.Int32,System.DateTime)">
            <summary>
            GET: api/Measure/Sensor/26/Date/2020-05-26
            </summary>
            <param name="sensorId">sensor id</param>
            <param name="date">date</param>
            <returns>List of measures for the sensor at the requested date</returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetSensorsBySensorIdFromDateToDate(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Returns measures for a sensor for an interval (the dates are included).
            </summary>
            <param name="sensorId">Sensor id</param>
            <param name="startDate">Start date.</param>
            <param name="endDate">End date.</param>
            <returns>List of measures for the interval</returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetSensorsBySensorIdAndMonth(System.Int32,System.Int32)">
            <summary>
            Gets the measure of a sensor during a mouth.
            </summary>
            <param name="sensorId">Sensor id.</param>
            <param name="month">Index of the month (1: January ..)</param>
            <returns>List of measure for a sensor during a month</returns>
        </member>
        <member name="M:IotWebApi.Controllers.MeasuresController.GetLastMeasure(System.Int32)">
            <summary>
            Gets the last measure of a sensor.
            </summary>
            <param name="sensorId">Sensor id.</param>
            <returns>Last measure of a sensor.</returns>
        </member>
        <member name="T:IotWebApi.Controllers.SensorsController">
            <summary>
            Class that manage the requests to the DB for Sensor
            </summary>
        </member>
        <member name="M:IotWebApi.Controllers.SensorsController.#ctor(IotWebApi.Models.DbSensorsContext)">
            <summary>
            Creates a new instance of <see cref="T:IotWebApi.Controllers.SensorsController"/>. 
            </summary>
            <param name="context">Context of the DB.</param>
        </member>
        <member name="M:IotWebApi.Controllers.SensorsController.GetSensors">
            <summary>
            GET: api/Sensor
            </summary>
            <returns>List of all sensors stored</returns>
        </member>
        <member name="M:IotWebApi.Controllers.SensorsController.GetSensorById(System.Int32)">
            <summary>
            Gets a sensor details from its id.
            </summary>
            <param name="id">Id of sensor.</param>
            <returns>Sensors corresponding to the id</returns>
        </member>
        <member name="M:IotWebApi.Controllers.SensorsController.GetSensorsByDeviceId(System.Int32)">
            <summary>
            Gets all sensors of a device.
            </summary>
            <param name="deviceId">Device id.</param>
            <returns>all the sensor stored for a device</returns>
        </member>
        <member name="T:IotWebApi.Models.ConnectionStrings">
            <summary>
            Class that store the connection string to the BD
            </summary>
        </member>
        <member name="P:IotWebApi.Models.ConnectionStrings.MySql">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="T:IotWebApi.Models.DbSensorsContext">
            <summary>
            Class for the DbContect
            </summary>
        </member>
        <member name="M:IotWebApi.Models.DbSensorsContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{IotWebApi.Models.DbSensorsContext})">
            <summary>
            Constructor
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:IotWebApi.Models.DbSensorsContext.Devices">
            <summary>
            DbSet of the devices
            </summary>
        </member>
        <member name="P:IotWebApi.Models.DbSensorsContext.Sensors">
            <summary>
            DbSet of the sensors
            </summary>
        </member>
        <member name="P:IotWebApi.Models.DbSensorsContext.Measures">
            <summary>
            DbSet of the measures
            </summary>
        </member>
        <member name="T:IotWebApi.Program">
            <summary>
            Main class who launch the WebApi
            </summary>
        </member>
        <member name="M:IotWebApi.Program.Main(System.String[])">
            <summary>
            The create the host builder
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:IotWebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            method that creates the host builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:IotWebApi.Startup">
            <summary>
            Class that create the service
            </summary>
        </member>
        <member name="P:IotWebApi.Startup.Configuration">
            <summary>
            Startup configuration
            </summary>
        </member>
        <member name="M:IotWebApi.Startup.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            Construtor
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:IotWebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
             This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:IotWebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
